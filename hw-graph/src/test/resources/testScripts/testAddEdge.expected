# Tests adding of edges by using a three node graph and
# connecting them in a triangle formation, using two nodes
# that point to each other, and three nodes pointing in a line
# Additionally tests edge cases such as adding multiple edges that
# point to one edge, one edge that points to multiple edges, and
# duplicate edges
Created graph A
Added node one to A
Added node two to A
Added node three to A
Added edge e12 to A
Added edge e23 to A
Added edge e31 to A
ListNodes of A output: one three two
ListChildren of one in A output: two
ListChildren of two in A output: three
ListChildren of three in A output: one
Created graph B
Added node one to B
Added node two to B
Added edge e12 to B
Added edge e21 to B
ListNodes of B output: one two
ListChildren of one in B output: two
ListChildren of two in B output: one
Created graph C
Added node one to C
Added node two to C
Added edge e12 to C
ListNodes of C output: one two
ListChildren of one in C output: two
ListChildren of two in C output:
Created graph D
Added node one to D
Added node two to D
Added node three to D
Added edge e12 to D
Added edge e13 to D
ListNodes of D output: one three two
ListChildren of one in D output: three two
ListChildren of two in D output:
ListChildren of three in D output:
Created graph E
Added node one to E
Added node two to E
Added node three to E
Added edge e12 to E
Added edge e32 to E
ListNodes of E output: one three two
ListChildren of one in E output: two
ListChildren of two in E output:
ListChildren of three in E output: two
Created graph F
Added node one to F
Added node two to F
Added edge e12 to F
Could not add edge e12 to F
ListNodes of F output: one two
ListChildren of one in F output: two
ListChildren of two in F output:
Created graph G
Added node one to G
Could not add edge e12 to G
ListChildren of one in G output:


