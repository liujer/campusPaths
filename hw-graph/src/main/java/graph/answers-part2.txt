## CSE 331 hw-graph Part 2 Questions

NOTE: This file is used as part of hw-graph-part2, and is not due as part of the hw-graph-part1
submission. You may leave it blank for hw-graph-part1.

## Section 1
###########################################################################

A few examples of possible Graph representations:

    A: A collection of edges.
    B: An adjacency list, in which each node is associated with a list of its outgoing edges.
    C: An adjacency matrix, which explicitly represents, for every pair ⟨A,B⟩ of edges, whether there is a link from A to B, and how many.

1. In two or three sentences, explain an advantage and a disadvantage of each of the
representations listed above (for example, in terms of runtime complexity, space
complexity, or ease of implementation).
A: Very easy to implement, simply inserting edges in a list. However, runtime complexity
when looking for particular edges will be O(n)

B: Slow to remove edges, but fastest implementation overall. Adding edges and nodes
occur in O(1) and finding if edge exists occurs in O(E) where V is number of nodes

C: Large space complexity (O(|V| * |E|)) and adding additional edges/nodes will also
cost O(|V| * |E|). Checking just if an edge exists between two nodes
will occur very quickly (O(1)) but searching for a particular edge will occur in O(|E|)
where E is the number of edges



2. In two to three sentences, describe the representation you chose and explain why you
chose it. If you chose to use a different representation than one of the three we described
above, be sure to list its advantages and disadvantages, too.

I chose to implement the adjacency list because of its easier implementation in terms of only
having to implement a single public class and the fast runtime complexity. The main functions of
the graph in my design focus on only adding nodes/edges and looking them up, so the adjacency list
serves its purpose well in that field compared to the other implementations.



## Section 4
###########################################################################

    (Please keep your answers brief and to-the-point.)

1. Describe any new tests you added and why you added them, or why you feel that your original
tests alone are sufficient.




2. Did you make any changes to your specifications as you were implementing your Graph? (yes/no)
If yes, describe your changes and why you made them.



